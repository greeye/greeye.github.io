[{"title":"","url":"http://yoursite.com/2017/03/11/可能是我太急了/","content":"<hr>\n<p>title: 可能真的是我太急了<br>date: 2017-03-11 09:06:06</p>\n<h2 id=\"tags\"><a href=\"#tags\" class=\"headerlink\" title=\"tags:\"></a>tags:</h2><p>这几天学习茫无头绪，效率不高。有时候总是满怀信心去做，可是即使我再怎么努力也很难达到预期效果。可能是我太心急了。努力，努力，努力，重要的事说三遍。我一直在努力，想在编程这块乐土有所成就。不管如何，坚持下去就对了。</p>\n<p>我过得太安逸了。每天早上9点开始学习，晚上10点结束学习。给我真正的自己学习的时间不足6个小时。有时候很奔溃，有时候很辛苦，但更多的时候我应该怀揣着对学习的热情，对获得的满足，我才能走的更远。可能真的是我太急了。 </p>\n<p>希望能成功，对，必须成功，对得起自己和家人，无愧与心!</p>\n<p>greeye 记于2017.3.11</p>\n","categories":[],"tags":[]},{"title":"jsp语法一","url":"http://yoursite.com/2017/03/07/jsp语法一/","content":"<p>##一、什么是JSP<br>JSP全称为Java Server Pages,它是一种用于开发<strong>动态web资源</strong>的技术。JSP允许在html页面中嵌套java代码在，主要作用是<strong>为用户提供动态数据</strong>。</p>\n<p>##二、JSP语法</p>\n<p>###JSP模板元素<br>jsp的模板元素就是指的是html，html为jsp页面提供基本骨架支撑，定义页面的结构和外观。</p>\n<p>###2.1 JSP表达式<br>jsp脚本表达式用于将程序数据输出到客户端<br>&lt;%= 变量或表达式 %&gt;<br>举例：当前时间：&lt;%= new java.util.Date %&gt;<br>运行原理：jsp引擎在翻译脚本表达式是，会将程序数据转换成字符串，然后在相应的位置用out.print(…)将数据输出给客户端。</p>\n<p>###2.2 <strong>JSP脚本片段</strong><br>jsp脚本片断用于在jsp页面中编写多行的java代码<br>e.g:<br>&lt;%<br>多行java代码<br>%&gt;<br>注意:<br>1.多行代码之间可以相互联系。多个脚本片断中的代码可以相互访问，犹如将所有的代码放在一对&lt;%%&gt;之中的情况。<br>2.jsp脚本片断必须严格执行java语法</p>\n<p>###<strong>2.3 JSP声明</strong><br>jsp声明可用于定义jsp页面转换成Servlet程序的<strong>静态代码块</strong>、<strong>成员变量</strong>和<strong>方法</strong></p>\n<p>###<strong>2.4 JSP注释</strong><br>&lt;% – 注释信息 – %&gt;</p>\n<p>###<strong>2.5 JSP指令</strong><br>JSP指令（directive）是为JSP引擎而设计的，它们并不直接产生任何可见输出，而只是告诉引擎如何处理JSP页面中的其余部分。</p>\n<ul>\n<li>page指令</li>\n<li>Include指令</li>\n<li>taglib指令<br>语法格式：<br>&lt;%@指令 属性名=“值”%&gt;<br>e.g：&lt;%@page contenType=”text/html;charset=utf-8”%&gt;<br>指令的属性可以有一个或者多个属性，并且不同属性可以分开写<br>###<strong>Page指令</strong><br>Page指令用于定义页面的各种属性，它作用于整个jsp页面。一般放在jsp页面的起始位置<br>相关语法<br>&lt;%@page<br>language=”java”<br>extends=”package.class”<br>import=”package.class”导包<br>session=”true|false” 禁止或者允许session<br>errorPage=”url”<br>erorPage属性的设置值必须使用相对路径，以“/”开头表示相对域当前web应用程序的根目录<br>可通过web.xml文件使用<error-page>元素为整个web应用程序设置错误处理的页面<br><exception-type>指定异常类的完全限定名<br><location>指定以“/”开头的错误处理页面的路径<br>注意：jsp页面的errorpage属性，优先于web.xml文件的处理错误页面的作用。<br>###<strong>taglib指令</strong><br>Taglib指令用于在JSP页面中导入标签库，</location></exception-type></error-page></li>\n</ul>\n<p>##三、JSP九大隐式对象<br><strong>Request</strong><br>Response<br><strong>Session</strong><br><strong>Application</strong>  也就是<strong>ServletContext</strong><br>config          也就是 servletConfig<br>Page   this<br>Exception  注意，别漏了<br>out<br><strong>PageContext</strong>（最重要的隐式）</p>\n<p>###out<br>out隐式对象用于向客户机发送文本数据<br>out是一个带有缓存区的输出流<br>因此out.writer(“data”)相比于response.getwriter(“data”)输出的数据会慢。</p>\n<p>###<strong>3.1PageContext对象</strong><br>pageContext对象，<br>封装了对其八大隐式对象的引用；<br>自身自带一个域对象，可以保存数据<br>封装了web开发中经常用的一些操作（引入、跳转其他资源、甚至可以检索其他域对象的属性<strong>findAttribute()</strong>，这个是一个逆天的方法，十分好用）<br> -<strong>通过pageContext获得其他对象 </strong><br>getException 返回exception隐式对象<br>getPage  返回page隐式对象<br>getRequest  返回request隐式对象<br>getResponse  返回response隐式对象<br>getServletConfig  返回config隐式对象<br>getServletContext  返回application隐式对象<br>getSession  返回session隐式对象<br>getOut  返回out隐式对象<br> -<strong>pageContext作为域对象 </strong><br>1、pageContext对象的方法<br>public void setAttribute(java.lang.String name,java.lang.Object value)<br>public java.lang.Object getAttribute(java.lang.String name)<br>public void removeAttribute(java.lang.String name)<br>2、pageContext对象中还封装了访问其它域的方法<br>public java.lang.Object getAttribute(java.lang.String name,int scope)<br>public void setAttribute(java.lang.String name, java.lang.Object value,int scope)<br>public void removeAttribute(java.lang.String name,int scope)<br>3、代表各个域的常量<br>PageContext.APPLICATION_SCOPE<br>PageContext.SESSION_SCOPE<br>PageContext.REQUEST_SCOPE<br>PageContext.PAGE_SCOPE </p>\n<p>###<strong>3.2引入和跳转到其他资源</strong><br>PageContext类中定义了一个forward方法和两个include方法来分别简化和替代RequestDispatcher.forward方法和include方法。</p>\n<p>###<strong>3.3 Jsp标签</strong><br>jsp标签用于在jsp页面中提供业务逻辑，避免在jsp页面中直接写java代码，造成jsp页面难以维护。<br>有以下常用标签：</p>\n<p><jsp:include><br>作用：把另一个资源的输出内容插入到当前jsp页面的输出内容，称为动态引入</jsp:include></p>\n<p><jsp:include page=\"relativeURL | <%=expression%>\" flush=\"true|false\"><br>page:用于指定被引入资源的相对路径，它也可以通过执行一个表达式来获得。<br>flush:指定在插入其他资源的输出内容时，是否先将当前JSP页面的已输出的内容刷新到客户端。  </jsp:include></p>\n<p><jsp:include page=\"relativeURL\"></jsp:include></p>\n<p><jsp:forwrad></jsp:forwrad></p>\n<p><jsp:forward page=\"relativeURL | <%=expression%>\"><br>page:用于指定请求转发到的资源的相对路径，它也可以通过执行一个表达式来获得。</jsp:forward></p>\n<p><jsp:param><br>当使用<jsp:include>和<jsp:forward>标签引入或将请求转发给其它资源时，可以使用<jsp:param>标签向这个资源传递参数。<br>语法1：<br>    <jsp:include page=\"relativeURL | <%=expression%>\"><br>        <jsp:param name=\"parameterName\" value=\"parameterValue|<%= expression %>\"><br>    </jsp:param></jsp:include><br>语法2：<br>    <jsp:forward page=\"relativeURL | <%=expression%>\"><br>        <jsp:param name=\"parameterName\" value=\"parameterValue|<%= expression %>\"><br>    </jsp:param></jsp:forward></jsp:param></jsp:forward></jsp:include></jsp:param></p>\n<p><jsp:param>标签的name属性用于指定参数名，value属性用于指定参数值。在<jsp:include>和<jsp:forward>标签中可以使用多个<jsp:param>标签来传递多个参数。 </jsp:param></jsp:forward></jsp:include></jsp:param></p>\n","categories":[],"tags":[]},{"title":"Hello World","url":"http://yoursite.com/2017/03/06/hello-world/","content":"","categories":[],"tags":[]},{"title":"about","url":"http://yoursite.com/about/index.html","content":"","categories":[],"tags":[]},{"title":"","url":"http://yoursite.com/css/personal-style.css","content":"@font-face {\n  font-family: \"Meiryo\";\n  src: url(\"/fonts/Meiryo.eot\");\n  /* IE9 */\n  src: url(\"/fonts/Meiryo.eot?#iefix\") format(\"embedded-opentype\"), /* IE6-IE8 */\n  url(\"/fonts/Meiryo.woff\") format(\"woff\"), /* chrome, firefox */\n  url(\"/fonts/Meiryo.ttf\") format(\"truetype\"), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */\n  url(\"/fonts/Meiryo.svg#Meiryo\") format(\"svg\");\n  /* iOS 4.1- */\n  font-style: normal;\n  font-weight: normal;\n}\nhtml.page-home {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('/images/bg.jpg');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n}","categories":[],"tags":[]},{"title":"category","url":"http://yoursite.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://yoursite.com/link/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"http://yoursite.com/project/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://yoursite.com/tag/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://yoursite.com/search/index.html","content":"","categories":[],"tags":[]}]